import java.util.*;

class Solution {
    public int[] solution(String[] info, String[] query) {

        ArrayList<Man> list = new ArrayList<>();

        //info list 작성
        for (String x : info) {
            //java backend junior pizza 150"
            String[] arr = x.split(" ");
            list.add(new Man(arr[0].charAt(0), arr[1].charAt(0), arr[2].charAt(0),
                                                 arr[3].charAt(0), Integer.valueOf(arr[4])));
        }
        //점수로 내림차순 정렬
        Collections.sort(list);


        int[] answer = new int[query.length];
        int index = 0;

        //쿼리 찾기
        for(String q : query) {
            String[] arr = q.split(" ");
            Man m = new Man(arr[0].charAt(0), arr[2].charAt(0), arr[4].charAt(0),
                                                  arr[6].charAt(0), Integer.valueOf(arr[7]));

            int cnt = 0;
            for (Man x : list) {
                if (x.s >= m.s) {
                    if (x.l==m.l || m.l=='-') {
                        if (x.j==m.j || m.j=='-') {
                            if(x.c==m.c || m.c=='-'){
                                if(x.f==m.f || m.f=='-'){
                                    cnt++;
                                }
                            }
                        }
                    }
                }else break;
            }

            answer[index++] = cnt;
        }

        //java  and backend     and junior and pizza 100
        //cpp   and     -       and senior and pizza 250


        for (Man x : list) {
            System.out.println(x.l + " " + x.j + " " + x.c + " " + x.f + " " + x.s);
        }

        //13가지 경의의 수



        return answer;
    }

    class Man implements Comparable<Man> {
        char l; //언어
        char j; //직군
        char c; //경력
        char f; //푸드
        int s; //점수

        Man(char l, char j, char c, char f, int s) {
            this.l = l;
            this.j = j;
            this.c = c;
            this.f = f;
            this.s = s;
        }

        @Override
        public int compareTo(Man o) {
            if (o.s == this.s) {
                if (o.l == this.l) {
                    if (o.j == this.j) {
                        if (o.c == this.c) {
                            return o.f - this.f;
                        }else {
                            return o.c - this.c;
                        }
                    }else {
                        return o.j - this.j;
                    }
                }else{
                    return o.l - this.l;
                }
            }else{
                return o.s - this.s;
            }
        }

    }




}

//개발언어 cpp, java, python //3
//직군 backend, frontend  //2
//경력 junior, junior //2
//소울푸드 chicken, pizza  //2
//점수

//검색을 모두 허용해야한다 -> 하나로만 검색 가능
//조건을 전부 줄수도 있고(5) 4 3 2 1  다 가능
//* [조건]을 만족하는 사람 중 코딩테스트 점수를 X점 이상 받은 사람은 모두 몇 명인가?

// - 표시 해당 조건 고려 x


// info
// ["java backend junior pizza 150","python frontend senior chicken 210","python frontend senior chicken 150","cpp backend senior pizza 260","java backend junior chicken 80","python backend senior chicken 50"]

// query
// "java and backend and junior and pizza 100",
// "python and frontend and senior and chicken 200",
// "cpp and - and senior and pizza 250",
// "- and backend and senior and - 150",
// "- and - and - and chicken 100",
// "- and - and - and - 150"

// result
