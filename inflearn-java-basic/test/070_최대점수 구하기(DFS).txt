package basic.inflearn;

import java.util.Scanner;

public class Main {

    /*
     * DFS(level, sum, time, []ps, []pt):
     *      if time > m:
     *          return
     *      if level == n:
     *          answer <- max(answer, sum)
     *      else:
     *          DFS(level+1, sum+ps[level], time+pt[level], ps, pt)
     *          DFS(level+1, sum, time, ps, pt)
     */

    static int answer = Integer.MIN_VALUE;
    static int n;
    static int m;

    public void DFS (int level, int sum, int time, int[] ps, int[] pt) {
        if (time > m) return;

        if (level == n) {
            answer = Math.max(answer, sum);
        }else {
            DFS(level+1, sum+ps[level], time+pt[level], ps, pt);
            DFS(level+1, sum, time, ps, pt);
        }
    }

    public static void main(String[] args) {

        //Input:    5 20
        //          10 5
        //          25 12
        //          15 8
        //          6 3
        //          7 4
        //Output:   41

        Main T = new Main();
        Scanner kb = new Scanner(System.in);

        n = kb.nextInt();
        m = kb.nextInt();
        int[] a = new int[n];
        int[] b = new int[n];

        for (int i=0; i<n; i++) {
            a[i] = kb.nextInt();
            b[i] = kb.nextInt();
        }

        T.DFS(0, 0, 0, a, b);
        System.out.println(answer);


    }
}