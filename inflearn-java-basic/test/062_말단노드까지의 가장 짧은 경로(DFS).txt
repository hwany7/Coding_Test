package basic.inflearn;

import java.util.Scanner;

class Node{
    int data;
    Node lt, rt;

    public Node(int data){
        this.data = data;
        lt = rt = null;
    }
}

public class Main {

    /*
     * DFS(level, node):
     *      if node.lt==null and node.rt==null"
     *              return level
     *      else:
     *          return min(DFS(level+1, node.lt), DFS(level+1, node.rt))
     *
     */

    Node root;
    public int DFS(int L, Node node){
        if(node.lt==null && node.rt==null) return L;
        else return Math.min(DFS(L+1, node.lt), DFS(L+1, node.rt));
    }

    /***
     * 해당 node 의 자식 노드들의 null 여부로 판단을 하기 때문에, 반드시 두 자식이 존재해야한다
     * 또한 DFS 로 말단거리를 측정 할때는, 모든 경우를 다 확인해야 하므로, 적절치 않다
     * 그냥 연습삼아 풀어본거일 뿐이다
     */


    public static void main(String[] args) {

        Main T = new Main();

        T.root = new Node(1);
        T.root.lt = new Node(2);
        T.root.rt = new Node(3);
        T.root.lt.lt = new Node(4);
        T.root.lt.rt = new Node(5);

        System.out.println(T.DFS(0, T.root));

    }
}