import java.util.*;

class Solution {
    class Stage implements Comparable<Stage> {
        int stage;
        float fail;

        Stage (int stage, float fail) {
            this.stage = stage;
            this.fail = fail;
        }

        @Override
        public int compareTo(Stage o) {
            if (this.fail > o.fail) return -1;
            else if (this.fail < o.fail) return 1;
            else return this.stage - o.stage;
        }
    }

    public int[] solution(int N, int[] stages) {
        ArrayList<Stage> list = new ArrayList<>();

        Arrays.sort(stages);
        int pos = 0;
        int len = stages.length;


        for (int i=1; i<N+1; i++) {
            int cnt = 0;
            for(int k=pos; k<stages.length; k++) {
                if (stages[k] == i) cnt++;
                else break;
            }

            float tmp = (float)cnt / (float)len;
            list.add(new Stage(i, tmp));
            pos += cnt;
            len -= cnt;
        }

        Collections.sort(list);

        int[] answer = new int[list.size()];
        for(int i=0; i<list.size(); i++) {
            answer[i] = list.get(i).stage;
        }

        return answer;
    }
}